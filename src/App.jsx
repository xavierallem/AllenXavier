import React, { useState, useEffect } from 'react';
import { GithubIcon, Mail, BookOpen, Code2, ChevronDown, ChevronUp, Menu, X } from 'lucide-react';
import AllenImage from './assets/Allen1.webp';


// Create a component for technology logos
const TechLogo = ({ name }) => {
  // Map of technology names to their SVG logos
  const svgLogos = {
    // Languages & Core
    'C': (
      <svg viewBox="0 0 128 128" className="w-6 h-6">
        <path fill="#659AD3" d="M115.4 30.7L67.1 2.9c-.8-.5-1.9-.7-3.1-.7-1.2 0-2.3.3-3.1.7l-48 27.9c-1.7 1-2.9 3.5-2.9 5.4v55.7c0 1.1.2 2.4 1 3.5l106.8-62c-.6-1.2-1.5-2.1-2.4-2.7z"></path>
        <path fill="#03599C" d="M10.7 95.3c.5.8 1.2 1.5 1.9 1.9l48.2 27.9c.8.5 1.9.7 3.1.7 1.2 0 2.3-.3 3.1-.7l48-27.9c1.7-1 2.9-3.5 2.9-5.4V36.1c0-.9-.1-1.9-.6-2.8l-106.6 62z"></path>
        <path fill="#fff" d="M85.3 76.1C81.1 83.5 73.1 88.5 64 88.5c-13.5 0-24.5-11-24.5-24.5s11-24.5 24.5-24.5c9.1 0 17.1 5 21.3 12.5l13-7.5c-6.8-11.9-19.6-20-34.3-20-21.8 0-39.5 17.7-39.5 39.5s17.7 39.5 39.5 39.5c14.6 0 27.4-8 34.2-19.8l-12.9-7.6z"></path>
      </svg>
    ),
    'C++': (
      <svg viewBox="0 0 128 128" className="w-6 h-6">
        <path fill="#D26383" d="M115.4 30.7L67.1 2.9c-.8-.5-1.9-.7-3.1-.7-1.2 0-2.3.3-3.1.7l-48 27.9c-1.7 1-2.9 3.5-2.9 5.4v55.7c0 1.1.2 2.4 1 3.5l106.8-62c-.6-1.2-1.5-2.1-2.4-2.7z"></path>
        <path fill="#9C033A" d="M10.7 95.3c.5.8 1.2 1.5 1.9 1.9l48.2 27.9c.8.5 1.9.7 3.1.7 1.2 0 2.3-.3 3.1-.7l48-27.9c1.7-1 2.9-3.5 2.9-5.4V36.1c0-.9-.1-1.9-.6-2.8l-106.6 62z"></path>
        <path fill="#fff" d="M85.3 76.1C81.1 83.5 73.1 88.5 64 88.5c-13.5 0-24.5-11-24.5-24.5s11-24.5 24.5-24.5c9.1 0 17.1 5 21.3 12.5l13-7.5c-6.8-11.9-19.6-20-34.3-20-21.8 0-39.5 17.7-39.5 39.5s17.7 39.5 39.5 39.5c14.6 0 27.4-8 34.2-19.8l-12.9-7.6z"></path>
        <path fill="#fff" d="M82.1 61.8h5.2v-5.3h4.4v5.3H97v4.4h-5.3v5.2h-4.4v-5.2h-5.2v-4.4zm18.5 0h5.2v-5.3h4.4v5.3h5.3v4.4h-5.3v5.2h-4.4v-5.2h-5.2v-4.4z"></path>
      </svg>
    ),
    'Python': (
      <svg viewBox="0 0 128 128" className="w-6 h-6">
        <linearGradient id="python-original-a" gradientUnits="userSpaceOnUse" x1="70.252" y1="1237.476" x2="170.659" y2="1151.089" gradientTransform="matrix(.563 0 0 -.568 -29.215 707.817)">
          <stop offset="0" stopColor="#5A9FD4"></stop>
          <stop offset="1" stopColor="#306998"></stop>
        </linearGradient>
        <linearGradient id="python-original-b" gradientUnits="userSpaceOnUse" x1="209.474" y1="1098.811" x2="173.62" y2="1149.537" gradientTransform="matrix(.563 0 0 -.568 -29.215 707.817)">
          <stop offset="0" stopColor="#FFD43B"></stop>
          <stop offset="1" stopColor="#FFE873"></stop>
        </linearGradient>
        <path fill="url(#python-original-a)" d="M63.391 1.988c-4.222.02-8.252.379-11.8 1.007-10.45 1.846-12.346 5.71-12.346 12.837v9.411h24.693v3.137H29.977c-7.176 0-13.46 4.313-15.426 12.521-2.268 9.405-2.368 15.275 0 25.096 1.755 7.311 5.947 12.519 13.124 12.519h8.491V67.234c0-8.151 7.051-15.34 15.426-15.34h24.665c6.866 0 12.346-5.654 12.346-12.548V15.833c0-6.693-5.646-11.72-12.346-12.837-4.244-.706-8.645-1.027-12.866-1.008zM50.037 9.557c2.55 0 4.634 2.117 4.634 4.721 0 2.593-2.083 4.69-4.634 4.69-2.56 0-4.633-2.097-4.633-4.69-.001-2.604 2.073-4.721 4.633-4.721z" transform="translate(0 10.26)"></path>
        <path fill="url(#python-original-b)" d="M91.682 28.38v10.966c0 8.5-7.208 15.655-15.426 15.655H51.591c-6.756 0-12.346 5.783-12.346 12.549v23.515c0 6.691 5.818 10.628 12.346 12.547 7.816 2.297 15.312 2.713 24.665 0 6.216-1.801 12.346-5.423 12.346-12.547v-9.412H63.938v-3.138h37.012c7.176 0 9.852-5.005 12.348-12.519 2.578-7.735 2.467-15.174 0-25.096-1.774-7.145-5.161-12.521-12.348-12.521h-9.268zM77.809 87.927c2.561 0 4.634 2.097 4.634 4.692 0 2.602-2.074 4.719-4.634 4.719-2.55 0-4.633-2.117-4.633-4.719 0-2.595 2.083-4.692 4.633-4.692z" transform="translate(0 10.26)"></path>
        <radialGradient id="python-original-c" cx="1825.678" cy="444.45" r="26.743" gradientTransform="matrix(0 -.24 -1.055 0 532.979 557.576)" gradientUnits="userSpaceOnUse">
          <stop offset="0" stopColor="#B8B8B8" stopOpacity=".498"></stop>
          <stop offset="1" stopColor="#7F7F7F" stopOpacity="0"></stop>
        </radialGradient>
      </svg>
    ),
    'TensorFlow': (
<svg
viewBox="0 0 224 256" 
version="1.1"
xmlns="http://www.w3.org/2000/svg"
xmlns:xlink="http://www.w3.org/1999/xlink"
className="w-6 h-6"
  preserveAspectRatio="xMidYMid"
>
  <g>
    <path
      d="M145.726081,42.0651946 L145.726081,84.1347419 L218.586952,126.204312 L218.586952,84.1347419 L145.726081,42.0651946 Z M-1.98726454e-07,84.1347419 L-1.98726454e-07,126.204312 L36.4304238,147.234755 L36.4304238,105.169527 L-1.98726454e-07,84.1347419 Z M109.291294,105.169527 L72.8608701,126.204312 L72.8608701,252.404316 L109.291294,273.439101 L109.291294,189.304303 L145.726081,210.339088 L145.726081,168.26954 L109.291294,147.234755 L109.291294,105.169527 Z"
      fill="#E55B2D"
    ></path>
    <path
      d="M145.726081,42.0651946 L36.4304238,105.169527 L36.4304238,147.234755 L109.291294,105.169527 L109.291294,147.234755 L145.726081,126.204312 L145.726081,42.0651946 Z M255.021717,63.0999794 L218.586952,84.1347419 L218.586952,126.204312 L255.021717,105.169527 L255.021717,63.0999794 Z M182.156505,147.234755 L145.726081,168.26954 L145.726081,210.339088 L182.156505,189.304303 L182.156505,147.234755 Z M145.726081,210.339088 L109.291294,189.304303 L109.291294,273.439101 L145.726081,252.404316 L145.726081,210.339088 Z"
      fill="#ED8E24"
    ></path>
    <path
      d="M145.726081,-3.41864288e-05 L-1.98726454e-07,84.1347419 L36.4304238,105.169527 L145.726081,42.0651946 L218.586952,84.1347419 L255.021717,63.0999794 L145.726081,-3.41864288e-05 Z M145.726081,126.204312 L109.291294,147.234755 L145.726081,168.26954 L182.156505,147.234755 L145.726081,126.204312 Z"
      fill="#F8BF3C"
    ></path>
  </g>
</svg>

    ),
    'PyTorch': (
<svg

viewBox="0 0 224 256" 
  version="1.1"
  xmlns="http://www.w3.org/2000/svg"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  className="w-6 h-6"
  preserveAspectRatio="xMidYMid"

>
  <g>
    <path
      d="M218.281037,90.106412 C268.572988,140.398363 268.572988,221.075034 218.281037,271.716235 C169.036835,322.008186 88.0109141,322.008186 37.7189632,271.716235 C-12.5729877,221.424284 -12.5729877,140.398363 37.7189632,90.106412 L127.825375,0 L127.825375,45.053206 L119.443383,53.4351978 L59.7216917,113.156889 C22.0027285,150.177353 22.0027285,210.946794 59.7216917,248.665757 C96.7421555,286.38472 157.511596,286.38472 195.230559,248.665757 C232.949523,211.645293 232.949523,150.875853 195.230559,113.156889 L218.281037,90.106412 Z M173.227831,84.5184175 C163.969338,84.5184175 156.463847,77.0129263 156.463847,67.7544338 C156.463847,58.4959413 163.969338,50.9904502 173.227831,50.9904502 C182.486323,50.9904502 189.991814,58.4959413 189.991814,67.7544338 C189.991814,77.0129263 182.486323,84.5184175 173.227831,84.5184175 Z"
      fill="#EE4C2C"
    ></path>
  </g>
</svg>

    ),
    'Node.js': (
<svg
viewBox="0 0 224 256" 
version="1.1"
xmlns="http://www.w3.org/2000/svg"

className="w-6 h-6"

>
  <path
    d="M17.1725 2.29872C16.4627 1.89953 15.5373 1.90132 14.8269 2.29872C11.2689 4.26227 7.71082 6.22641 4.15216 8.18906C3.45969 8.55335 2.99264 9.29698 3.00009 10.0688V21.9328C2.99509 22.7197 3.48622 23.4705 4.19655 23.8298C5.21871 24.3736 6.2118 24.9726 7.25244 25.4802C8.45451 26.0709 9.95843 26.2015 11.1752 25.5855C12.1629 25.075 12.6016 23.9395 12.6003 22.896C12.6083 18.9806 12.6016 15.0651 12.6034 11.1496C12.6269 10.9756 12.4962 10.7896 12.3064 10.7938C11.8517 10.7866 11.3964 10.7896 10.9417 10.7926C10.7699 10.7764 10.6022 10.9191 10.6152 11.0918C10.6091 14.982 10.6164 18.8734 10.6115 22.7642C10.6214 23.3024 10.2578 23.8196 9.73913 24.0014C8.5412 24.4213 5.12198 22.2012 5.12198 22.2012C4.9965 22.1431 4.91682 22.007 4.92912 21.8718C4.92912 17.9576 4.92973 14.0433 4.92912 10.1297C4.91187 9.97191 5.00912 9.8298 5.15402 9.76538C8.70033 7.8134 12.2448 5.85654 15.7911 3.90336C15.9143 3.82115 16.086 3.8214 16.2089 3.90396C19.7552 5.85654 23.3003 7.81161 26.8472 9.76368C26.9926 9.828 27.0857 9.9725 27.0709 10.1297C27.0703 14.0433 27.0721 17.9576 27.0697 21.8713C27.0802 22.0098 27.0086 22.144 26.8793 22.2048C23.3661 24.1462 19.8129 26.025 16.3315 28.0228C16.1796 28.1099 16.0075 28.2086 15.8373 28.1126C14.9218 27.6062 14.0174 27.0801 13.1049 26.5688C13.0057 26.5069 12.8794 26.4803 12.7759 26.5496C12.3668 26.7652 11.982 26.9398 11.5122 27.1258C10.8524 27.387 10.9578 27.4938 11.5529 27.8405C12.62 28.4444 13.6889 29.0459 14.756 29.6504C15.4585 30.0888 16.4024 30.12 17.1275 29.7149C20.6861 27.7538 24.2436 25.7904 27.8029 23.8293C28.5113 23.468 29.0049 22.7202 28.9999 21.9327V10.0688C29.0068 9.31264 28.5576 8.58227 27.886 8.21259C24.3156 6.23947 20.7435 4.27064 17.1725 2.29872Z"
    fill="#8CC84B"
  ></path>
  <path
    d="M22.5419 11.2062C21.1452 10.459 19.4836 10.4192 17.9315 10.5169C16.8102 10.6277 15.6309 10.9371 14.814 11.7409C13.9761 12.5489 13.7937 13.8537 14.1917 14.9085C14.4769 15.6539 15.1948 16.1386 15.9372 16.395C16.8935 16.7326 17.8979 16.837 18.9026 16.9414C19.819 17.0366 20.7357 17.1319 21.6165 17.4042C21.9763 17.5234 22.3953 17.7058 22.5055 18.0973C22.6073 18.5609 22.4957 19.0998 22.1193 19.4219C20.9237 20.3682 17.5979 20.2232 16.4166 19.4784C15.939 19.1611 15.7332 18.5994 15.6495 18.0641C15.6402 17.8973 15.5059 17.7443 15.3248 17.757C14.8713 17.7516 14.4178 17.7528 13.9643 17.7564C13.8061 17.7431 13.6416 17.8557 13.6329 18.0172C13.5397 20.4689 15.7914 21.5377 17.9039 21.773C19.1108 21.888 20.3442 21.8814 21.5327 21.6224C22.4261 21.419 23.3219 21.0444 23.9369 20.3563C24.6953 19.52 24.8444 18.2749 24.5043 17.2332C24.2443 16.4559 23.5012 15.9573 22.7416 15.7008C21.7086 15.3466 20.4844 15.1562 19.5488 15.0671C18.1889 14.9376 16.5729 14.9905 16.188 14.0969C16.0345 13.629 16.1651 13.048 16.5951 12.7602C17.7328 11.9885 20.0483 12.091 21.2265 12.6675C21.7675 12.9384 22.081 13.4948 22.2104 14.0565C22.2344 14.2215 22.3454 14.3937 22.5364 14.3865C22.9868 14.3955 23.4372 14.3889 23.8875 14.3895C24.0422 14.4003 24.2116 14.313 24.2418 14.1546C24.2227 12.9806 23.6232 11.7788 22.5419 11.2062Z"
    fill="#8CC84B"
  ></path>
</svg>


    ),
    'Docker': (
<svg
viewBox="0 0 224 256" 
version="1.1"
xmlns="http://www.w3.org/2000/svg"
xmlns:xlink="http://www.w3.org/1999/xlink"
className="w-6 h-6"
preserveAspectRatio="xMidYMid"
>
  <g>
    <path
      d="M250.715745,70.4971666 C244.951102,66.4973277 231.740464,64.997388 221.412146,66.9973071 C220.211179,56.9977092 214.68673,48.2480609 205.078993,40.4983724 L199.554544,36.4985331 L195.711449,42.248302 C190.90758,49.7480006 188.505646,60.2475786 189.226226,70.2471769 C189.46642,73.7470364 190.667387,79.9967847 194.270289,85.496564 C190.90758,87.4964838 183.941971,89.996383 174.814621,89.996383 L1.15476998,89.996383 L0.674383104,91.9963028 C-1.00697093,101.9959 -1.00697093,133.244645 18.6888904,157.243681 C33.5808831,175.492947 55.6786788,184.742575 84.7420842,184.742575 C147.672763,184.742575 194.270289,154.493791 216.127891,99.7459909 C224.774854,99.9959813 243.269748,99.7459909 252.637292,80.996745 C252.877486,80.4967649 253.357872,79.4968046 255.039227,75.7469554 L256,73.7470364 L250.715745,70.4971666 L250.715745,70.4971666 Z M139.986573,0 L113.565295,0 L113.565295,24.9989952 L139.986573,24.9989952 L139.986573,0 L139.986573,0 Z M139.986573,29.9987943 L113.565295,29.9987943 L113.565295,54.9977896 L139.986573,54.9977896 L139.986573,29.9987943 L139.986573,29.9987943 Z M108.761427,29.9987943 L82.3401495,29.9987943 L82.3401495,54.9977896 L108.761427,54.9977896 L108.761427,29.9987943 L108.761427,29.9987943 Z M77.5362814,29.9987943 L51.1150037,29.9987943 L51.1150037,54.9977896 L77.5362814,54.9977896 L77.5362814,29.9987943 L77.5362814,29.9987943 Z M46.311135,59.9975886 L19.8898576,59.9975886 L19.8898576,84.9965839 L46.311135,84.9965839 L46.311135,59.9975886 L46.311135,59.9975886 Z M77.5362814,59.9975886 L51.1150037,59.9975886 L51.1150037,84.9965839 L77.5362814,84.9965839 L77.5362814,59.9975886 L77.5362814,59.9975886 Z M108.761427,59.9975886 L82.3401495,59.9975886 L82.3401495,84.9965839 L108.761427,84.9965839 L108.761427,59.9975886 L108.761427,59.9975886 Z M139.986573,59.9975886 L113.565295,59.9975886 L113.565295,84.9965839 L139.986573,84.9965839 L139.986573,59.9975886 L139.986573,59.9975886 Z M171.211719,59.9975886 L144.790441,59.9975886 L144.790441,84.9965839 L171.211719,84.9965839 L171.211719,59.9975886 L171.211719,59.9975886 Z"
      fill="#2396ED"
      fill-rule="nonzero"
    ></path>
  </g>
</svg>

    ),
    'Git': (
<svg

viewBox="0 0 224 256" 
  version="1.1"
  xmlns="http://www.w3.org/2000/svg"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  className="w-6 h-6"
  preserveAspectRatio="xMidYMid"
>
  <path
    d="M 16 2 C 15.496094 2 15.003906 2.183594 14.625 2.5625 L 11.8125 5.40625 C 11.660156 5.488281 11.53125 5.605469 11.4375 5.75 L 2.5625 14.625 C 1.804688 15.378906 1.804688 16.617188 2.5625 17.375 L 14.625 29.4375 C 15.382813 30.191406 16.617188 30.191406 17.375 29.4375 L 29.4375 17.375 C 30.195313 16.621094 30.195313 15.382813 29.4375 14.625 L 17.375 2.5625 C 16.996094 2.183594 16.503906 2 16 2 Z M 16 4.03125 L 27.96875 16 L 16 27.96875 L 4.03125 16 L 12.3125 7.71875 L 14.0625 9.46875 C 14.015625 9.636719 14 9.816406 14 10 C 14 10.738281 14.402344 11.371094 15 11.71875 L 15 20.28125 C 14.402344 20.628906 14 21.261719 14 22 C 14 23.105469 14.894531 24 16 24 C 17.105469 24 18 23.105469 18 22 C 18 21.261719 17.597656 20.628906 17 20.28125 L 17 12.4375 L 20.0625 15.5 C 20.019531 15.660156 20 15.828125 20 16 C 20 17.105469 20.894531 18 22 18 C 23.105469 18 24 17.105469 24 16 C 24 14.894531 23.105469 14 22 14 C 21.828125 14 21.660156 14.019531 21.5 14.0625 L 17.9375 10.5 C 17.980469 10.339844 18 10.171875 18 10 C 18 8.894531 17.105469 8 16 8 C 15.816406 8 15.636719 8.015625 15.46875 8.0625 L 13.71875 6.3125 Z"
  ></path>
</svg>

    ),
    'Bash': (
<svg

  viewBox="0 0 224 256"
  version="1.1"
  xmlns="http://www.w3.org/2000/svg"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  className="w-6 h-6"
>
  <g>
    <path
      d="M207.953496,52.161792 L127.317154,4.28699154 C117.73318,-1.42899718 105.786545,-1.42899718 96.2025707,4.28699154 L15.5500822,52.161792 C5.848665,58.0143618 -0.0579442252,68.5395346 0.000428679482,79.8694336 L0.000428679482,175.602888 C-0.0522462707,186.927041 5.85362572,197.444768 15.5500822,203.294383 L96.186424,251.153037 C105.771373,256.86549 117.716059,256.86549 127.301008,251.153037 L207.937349,203.294383 C217.644962,197.44581 223.55812,186.9199 223.50315,175.586741 L223.50315,79.8694336 C223.561523,68.5395346 217.654913,58.0143618 207.953496,52.161792 Z"
      fill="#FFFFFF"
    ></path>
    <path
      d="M208.411532,52.276683 L127.597582,4.29643402 C117.992498,-1.43214467 106.019549,-1.43214467 96.4144654,4.29643402 L15.5843327,52.276683 C5.86154721,58.1421436 -0.0580718526,68.6904991 0.000429623687,80.0453532 L0.000429623687,175.989669 C-0.0523613478,187.338765 5.86651886,197.879657 15.5843327,203.742157 L96.3982832,251.706224 C106.004343,257.431259 117.975339,257.431259 127.581399,251.706224 L208.39535,203.742157 C218.124345,197.880703 224.050527,187.331607 223.995435,175.973487 L223.995435,80.0453532 C224.053937,68.6904991 218.134318,58.1421436 208.411532,52.276683 Z M99.2301697,246.803014 L18.4162192,198.838948 C10.4300926,193.999639 5.56585934,185.327547 5.59969728,175.989669 L5.59969728,80.0453532 C5.56264048,70.7066408 10.4277023,62.033071 18.4162192,57.1960744 L99.2301697,9.21582548 C107.095348,4.52357839 116.900517,4.52357839 124.765695,9.21582548 L205.514917,57.1960744 C212.17156,61.2279088 216.712503,67.9889997 217.926671,75.6761569 C215.240424,69.9638372 209.20446,68.3941629 202.1652,72.4397151 L125.768992,119.756494 C116.237671,125.306991 109.214593,131.569506 109.19841,143.058874 L109.19841,237.271693 C109.19841,244.149132 111.965568,248.59924 116.237671,249.909999 C114.838668,250.166379 113.420175,250.301731 111.997932,250.314554 C107.503971,250.311263 103.093756,249.098314 99.2301697,246.803014 Z"
      fill="#2F3A3E"
    ></path>
    <path
      d="M187.007319,185.05984 L166.920894,197.072944 C166.382945,197.289147 166.022425,197.801466 166.000535,198.380822 L166.000535,203.660774 C166.000535,204.30664 166.436494,204.564987 166.969334,204.2582 L187.362545,191.857577 C187.861962,191.483188 188.100868,190.854486 187.976118,190.242913 L187.976118,185.608826 C187.959971,185.0114 187.491719,184.753054 187.007319,185.05984 Z"
      fill="#3AB14A"
    ></path>
    <path
      d="M144.262952,140.831868 C144.908817,140.508935 145.441657,140.831868 145.457803,141.752226 L145.52239,148.75987 C147.937868,147.662506 150.63266,147.335523 153.240486,147.823365 C153.741032,147.952538 153.950938,148.630697 153.757179,149.438029 L152.223247,155.5899 C152.106964,156.054178 151.867023,156.478259 151.528942,156.817045 C151.410206,156.934194 151.274035,157.032237 151.125276,157.107685 C150.94275,157.206405 150.732219,157.240546 150.52785,157.204565 C147.984993,156.641458 145.323113,157.068744 143.084247,158.399417 C139.810579,159.87411 137.670697,163.093345 137.578241,166.682645 C137.578241,169.911974 139.192905,170.800039 144.828084,170.896919 C152.271687,171.026092 155.501016,174.271568 155.581749,181.779758 C155.404525,189.616874 151.790949,196.979831 145.700003,201.914623 L145.829176,208.793094 C145.817697,209.647405 145.37394,210.437656 144.650471,210.892157 L140.581517,213.233421 C139.935651,213.556354 139.402812,213.233421 139.386665,212.329209 L139.386665,205.563765 C135.89899,207.016963 132.362875,207.356042 130.102345,206.45183 C129.682532,206.290364 129.488772,205.660645 129.666385,204.934046 L131.13573,198.717587 C131.24746,198.225629 131.499922,197.776809 131.862329,197.425856 C131.977267,197.315759 132.107853,197.223261 132.249848,197.151363 C132.460373,197.056728 132.701336,197.056728 132.911861,197.151363 C135.790274,197.931772 138.860474,197.542919 141.453436,196.069538 C145.195213,194.264929 147.626918,190.533412 147.766774,186.381551 C147.766774,182.893876 145.845323,181.440678 141.308116,181.408385 C135.446884,181.408385 130.005465,180.27812 129.892438,171.720398 C130.027305,164.244122 133.498017,157.21978 139.354372,152.570478 L139.063732,145.530541 C139.061125,144.663931 139.507025,143.857647 140.242437,143.399184 L144.262952,140.831868 Z"
      fill="#FFFFFF"
    ></path>
  </g>
</svg>

    ),
    'OpenCV': (
<svg
viewBox="0 0 224 256" 
version="1.1"
xmlns="http://www.w3.org/2000/svg"
xmlns:xlink="http://www.w3.org/1999/xlink"
className="w-6 h-6"
preserveAspectRatio="xMidYMid"
>
  <g>
    <path
      d="M96.8988295,111.577478 C73.5242954,98.0821845 62.1282337,70.5696577 69.1139117,44.4987526 C76.0995896,18.4278475 99.725132,0.299331211 126.715719,0.299331211 C153.706306,0.299331211 177.331848,18.4278475 184.317526,44.4987526 C191.303204,70.5696577 179.907143,98.0821845 156.532609,111.577478 L138.577759,80.4787667 C147.87684,75.1099399 152.41053,64.1646434 149.631421,53.7928665 C146.852312,43.4210897 137.453373,36.20903 126.715719,36.20903 C115.978066,36.20903 106.579126,43.4210897 103.800017,53.7928665 C101.020908,64.1646434 105.554598,75.1099399 114.853679,80.4787667 L96.8988295,111.577478 Z"
      fill="#FF0101"
    ></path>
    <path
      d="M164.965719,237.292642 C141.591185,223.797348 130.195123,196.284822 137.180801,170.213917 C144.166479,144.143011 167.792022,126.014495 194.782609,126.014495 C221.773196,126.014495 245.398738,144.143011 252.384416,170.213917 C259.370094,196.284822 247.974032,223.797348 224.599498,237.292642 L206.644649,206.193931 C215.94373,200.825104 220.47742,189.879807 217.698311,179.508031 C214.919201,169.136254 205.520262,161.924194 194.782609,161.924194 C184.044955,161.924194 174.646016,169.136254 171.866907,179.508031 C169.087798,189.879807 173.621488,200.825104 182.920569,206.193931 L164.965719,237.292642 Z"
      fill="#0101FF"
      transform="translate(194.782609, 181.653569) rotate(180.000000) translate(-194.782609, -181.653569) "
    ></path>
    <path
      d="M119.56689,177.658863 C119.56689,204.64945 101.438373,228.274992 75.3674681,235.26067 C49.296563,242.246348 21.7840362,230.850287 8.28874269,207.475752 C-5.20655084,184.101218 -1.31956641,154.57664 17.7656607,135.491413 C36.8508879,116.406186 66.3754659,112.519202 89.7499999,126.014495 L71.7951506,157.113207 C62.4960699,151.74438 50.7503199,153.290737 43.1576523,160.883405 C35.5649847,168.476072 34.0186273,180.221822 39.3874541,189.520903 C44.7562808,198.819984 55.7015774,203.353674 66.0733542,200.574565 C76.445131,197.795456 83.6571907,188.396516 83.6571907,177.658863 L119.56689,177.658863 Z"
      fill="#01FF01"
    ></path>
    <path
      d="M17.3292308,251.590635 C22.3764548,251.136856 27.4793311,251.141137 32.5008696,251.860334 C35.5959866,252.408294 38.8794649,253.208829 41.2040134,255.464883 C43.6398662,258.183278 44.2391973,261.959064 44.7743144,265.439465 C45.6519064,272.661405 45.5491639,279.986087 44.7743144,287.212308 C44.2563211,290.739799 43.7468896,294.549833 41.4351839,297.41806 C38.9137124,299.97806 35.1892977,300.705819 31.7731104,301.245217 C26.7301672,301.874515 21.6144482,302.020067 16.5501003,301.514916 C13.1210702,301.16388 9.54220736,300.560268 6.6226087,298.60388 C4.73471572,297.405217 3.72013378,295.290435 3.03090301,293.239866 C1.64816054,288.967492 1.47264214,284.429699 1.28428094,279.977525 C1.26287625,274.095518 1.3741806,268.153579 2.52147157,262.365753 C3.14220736,259.664482 3.89565217,256.693512 6.1773913,254.891237 C9.39237458,252.558127 13.4806689,251.993043 17.3292308,251.590635 Z M18.1640134,259.651639 C16.0406689,259.972709 13.3950502,260.148227 12.1150502,262.12602 C10.9977258,265.075585 11.0362542,268.294849 10.8093645,271.398528 C10.7023411,276.933779 10.4240803,282.520401 11.2802676,288.012843 C11.5970569,289.866488 12.2477592,292.075452 14.3068896,292.61913 C18.7719064,293.984749 23.5494314,293.753579 28.1514381,293.492441 C30.4460201,293.141405 33.4897659,292.944482 34.6070903,290.542876 C35.8870903,286.886957 35.7971906,282.939933 35.9555853,279.121338 C35.904214,273.753043 36.2038796,268.282007 34.9195987,263.029298 C34.6113712,261.162809 32.676388,260.366555 31.0367893,260.036923 C26.8072241,259.206421 22.4406689,259.309164 18.1640134,259.651639 Z M63.259398,268.320535 C66.3245485,266.372709 70.130301,266.05592 73.6663545,266.37699 C76.9669565,266.659532 80.6314381,267.781137 82.3994649,270.820602 C84.5099666,274.634916 84.6298328,279.142742 84.7753846,283.397993 C84.681204,287.77311 84.5998662,292.34087 82.793311,296.407759 C81.7616054,298.87786 79.3899666,300.496054 76.8513712,301.133913 C72.9642809,302.088562 68.6919064,302.191304 64.946087,300.641605 C62.921204,299.849632 61.5213378,298.128696 60.361204,296.36495 L60.361204,316.361204 L51.7993311,316.361204 C51.803612,299.811104 51.7907692,283.256722 51.803612,266.706622 C54.5733779,266.693779 57.3431438,266.693779 60.1086288,266.706622 C60.0144482,268.410435 59.9202676,270.109967 59.8731773,271.81806 C60.900602,270.563746 61.8552508,269.185284 63.259398,268.320535 Z M66.0462876,272.789833 C64.0085619,272.948227 61.7910368,273.958528 61.2131104,276.090435 C60.1214716,279.849097 60.3141137,283.830368 60.4725084,287.700334 C60.7379264,290.221806 61.0504348,293.471037 63.7345819,294.601204 C66.6199331,295.718528 69.9505017,295.658595 72.8701003,294.703946 C75.3958528,293.813512 75.7640134,290.842542 76.0294314,288.54796 C76.2948495,284.746488 76.3890301,280.86796 75.6441472,277.113579 C75.3915719,275.65806 74.642408,274.155452 73.2211371,273.543278 C70.9779264,272.554381 68.443612,272.605753 66.0462876,272.789833 Z M95.0196656,268.384749 C99.2278261,266.222876 104.155184,266.145819 108.774314,266.364147 C112.618595,266.685217 117.284816,267.327358 119.40388,271.004682 C121.792642,275.444013 121.403077,280.666756 121.73699,285.538462 L98.3159866,285.538462 C98.5899666,288.051371 98.2646154,290.761204 99.5317726,293.064348 C100.614849,294.883746 102.913712,295.256187 104.857258,295.363211 C107.258863,295.380334 109.844548,295.577258 112.057793,294.459933 C113.32495,293.466756 113.333512,291.70301 113.496187,290.247492 C116.235987,290.243211 118.975786,290.243211 121.715585,290.247492 C121.612843,293.107157 121.244682,296.309298 118.9501,298.321338 C115.503946,301.412174 110.572308,301.733244 106.162943,301.818863 C102.271572,301.703278 98.1618729,301.506355 94.6771906,299.588495 C91.8560535,297.923211 90.9570569,294.502742 90.4604682,291.488963 C89.8311706,287.011104 89.6727759,282.447625 90.207893,277.952642 C90.6445485,274.403746 91.5991973,270.229833 95.0196656,268.384749 Z M100.02408,273.834381 C98.2346488,275.465418 98.4101672,278.17097 98.3331104,280.388495 C103.367492,280.414181 108.401873,280.401338 113.440535,280.392776 C113.431973,278.39786 113.624615,276.223144 112.545819,274.446555 C111.488428,273.008161 109.506355,272.91398 107.879599,272.738462 C105.255385,272.699933 102.361472,272.41311 100.02408,273.834381 Z M139.969498,268.363344 C142.931906,266.308495 146.759064,266.021672 150.243746,266.42408 C153.210435,266.736589 156.352642,267.866756 158.103545,270.426756 C159.657525,272.5501 160.0899,275.255652 160.111304,277.828495 C160.098462,285.679732 160.115585,293.526689 160.107023,301.377926 C157.39291,301.382207 154.683077,301.382207 151.977525,301.377926 C151.964682,293.950502 151.986087,286.527358 151.964682,279.104214 C151.883344,277.481739 151.947559,275.606689 150.727492,274.356656 C149.426087,272.948227 147.38408,272.674247 145.564682,272.68709 C143.364281,272.674247 140.98408,273.05097 139.288829,274.570702 C137.632107,275.983411 137.002809,278.26087 136.994247,280.36709 C136.981405,287.370702 136.998528,294.374314 136.985686,301.373645 C134.275853,301.382207 131.56602,301.382207 128.860468,301.377926 C128.856187,289.819398 128.856187,278.26087 128.860468,266.702341 C131.523211,266.693779 134.190234,266.69806 136.852977,266.702341 C136.840134,268.731505 136.63893,270.747826 136.578997,272.77699 C137.452308,271.137391 138.368428,269.407893 139.969498,268.363344 Z M174.829164,253.174582 C179.315585,251.667692 184.097391,251.453645 188.789298,251.286689 C193.335652,251.308094 198.087492,251.350903 202.334181,253.183144 C204.491773,254.08214 205.985819,256.051371 206.713579,258.226087 C207.899398,261.475318 207.933645,264.994247 207.959331,268.414716 C204.829967,268.414716 201.700602,268.423278 198.575518,268.410435 C198.524147,266.004548 198.708227,263.307559 197.218462,261.261271 C195.711572,259.720134 193.357057,259.724415 191.35786,259.488963 C187.29097,259.411906 183.057124,259.150769 179.161472,260.554916 C177.757324,261.000134 177.029565,262.404281 176.747023,263.757057 C175.946488,267.387291 175.942207,271.13311 175.946488,274.83612 C175.993579,279.784883 175.916522,284.806421 176.973913,289.673846 C177.252174,291.454716 178.891773,292.550635 180.535652,292.944482 C184.337124,293.890569 188.305552,293.753579 192.188361,293.522408 C194.213244,293.25699 196.679064,293.124281 197.950502,291.266355 C199.307559,289.048829 199.080669,286.321873 199.007893,283.830368 C202.167224,283.817525 205.322274,283.821806 208.481605,283.830368 C208.443077,287.764548 208.374582,291.827157 206.944749,295.551572 C206.208428,297.499398 204.688696,299.151839 202.719465,299.896722 C198.853779,301.446421 194.615652,301.544883 190.514515,301.793177 C185.758395,301.874515 180.942341,301.75893 176.293244,300.650167 C173.566288,299.939532 170.586756,298.689498 169.32388,295.979666 C167.709967,292.396522 167.414582,288.41097 166.999331,284.553846 C166.652575,279.459532 166.429967,274.356656 166.554114,269.253779 C166.798127,265.122676 167.174849,260.768963 169.405217,257.168696 C170.591037,255.165217 172.671572,253.910903 174.829164,253.174582 Z M210.022742,251.731906 C213.284816,251.736187 216.54689,251.642007 219.804682,251.778997 C222.976856,261.843478 226.461538,271.805217 229.663679,281.856856 C230.909431,285.718261 231.791304,289.69097 233.079866,293.539532 C234.522542,289.387023 235.447224,285.071839 236.859933,280.910769 C239.989298,271.188763 243.204281,261.496722 246.329365,251.774716 C249.548629,251.637726 252.776455,251.757592 256,251.714783 L256,252.780736 C250.700201,268.932709 245.524548,285.127492 240.331773,301.317993 C235.485753,301.416455 230.631171,301.429298 225.785151,301.309431 C220.622341,284.75505 215.211237,268.277726 210.022742,251.731906 Z"
      fill="#050505"
    ></path>
  </g>
</svg>

    ),




    // Add more SVG logos for other skills
    // Default to a generic tech icon for undefined logos

  };

  return (
    <div 
      className="px-2 py-1 bg-gray-700 rounded-full text-gray-300 hover:bg-blue-500/20 transition-colors flex items-center justify-center"
      title={name} // Add title attribute for tooltip on hover
    >
      {svgLogos[name] || svgLogos['default']}
      <span className="hidden sm:inline ml-1">{name}</span> {/* Hide text on mobile, show on larger screens */}
    </div>
  );
};

const experienceDetails = {
"Thesis": {
  skills: ["Deep Learning", "Graph Neural Networks", "PyTorch", "Python", "Collaborative Perception", "PointPillars", "OpenCOOD", "Vehicle-to-Everything (V2X)", "Mixture of Experts (MoE)", "Graph Attention Networks (GAT)"],
  achievements: [
    "Engineered EffiComm, a novel bandwidth-efficient framework for Vehicle-to-Everything (V2X) collaborative perception, achieving <40% data transmission compared to prior art while maintaining state-of-the-art 3D object detection accuracy (0.843 mAP@0.7)",
    "Developed innovative two-stage compression pipeline combining Selective Transmission and Adaptive Grid Reduction using Graph Attention Networks (GAT), reducing average bandwidth from 4.9MB to 1.90MB per frame - a 2.5x improvement over existing methods",
    "Architected first of it's kind end-to-end trainable system integrating confidence-based spatial masking, vehicle specific compression ratios, and Mixture-of-Experts (MoE) attention fusion for autonomous vehicle communication networks, validated on OPV2V benchmark dataset"
  ]
},
  "Research Assistant": {
    skills: ["Graph Neural Networks", "Gaussian Process", "Python","Pytorch Geometric", "Data Analysis"],
    achievements: [
      "Engineered sophisticated machine learning models integrating Graph Neural Networks and Gaussian Processes for real-time pathogen spread prediction in project <strong><u><a href='https://pathobot.de' target='_blank' rel='noopener noreferrer' style='color: inherit;'>Pathobot</a></u></strong>, achieving 89% accuracy in outbreak detection within hospital environments",
      "Developed scalable data processing pipelines implementing automated feature extraction and normalization techniques, optimizing training data quality through advanced preprocessing algorithms",
    ]
  },
  "Software Developer(WerkStudent)": {
    skills: ["Embedded C/C++", "WLED", "STMCore", "Edge Computing", "IoT", "Electronics","DSA"],
    achievements: [
      "Spearheaded the development of real-time operating system (RTOS) based firmware for IoT devices mainly <strong><u><a href='https://lixl.io/?srsltid=AfmBOorbUx3tDdYJnHNM6E1GZHuD7gdtg6R9l8YjMl4UfjQsZCtE8EuL' target='_blank' rel='noopener noreferrer' style='color: inherit;'>Lixl Aura</a></u></strong> and <strong><u><a href='https://www.leetdesk.com/de?utm_source=google&utm_medium=cpc&utm_campaign=7153283942&utm_content=79909882306&utm_term=leetdesk&tmsrc=googlead&tmcid=7153283942&tmsid=79909882306&tmid=490543458406&tmkw=leetdesk&gad_source=1&gbraid=0AAAAApp9bVc3IUJxP3FYBmkCTS0YDFjfR&gclid=Cj0KCQiA_NC9BhCkARIsABSnSTZe7vXmAeoTS_tJ3ht0jcqQvfVSmD0-VNWkaaBO_Oey86DdzIIjaqQaAtbqEALw_wcB' target='_blank' rel='noopener noreferrer' style='color: inherit;'>LeetDesk</a></u></strong>, implementing sophisticated task scheduling and resource management systems",
      "Achieved 60% reduction in power consumption through implementation of advanced power management algorithms and intelligent sleep mode optimization",
      "Designed and implemented robust communication protocols with error handling and packet verification, ensuring reliable data transmission in noisy environments"
    ]
  },
  "Software Developer(HiWI)": {
    skills: ["Embedded Linux", "Docker", "Python", "Photogrammetry", "Image Processing"],
    achievements: [
      "Architected and implemented Linux device drivers utilizing finite state machines for precise control of imaging devices, ensuring optimal performance and reliability",
      "Engineered sophisticated image processing pipeline using PyTorch, incorporating advanced computer vision algorithms for feature detection and image enhancement",
      "Developed containerized deployment solutions with Docker, implementing CI/CD pipelines and ensuring consistent performance across different hardware platforms"
    ]
  },
  "Associate Software Developer": {
    skills: ["Java Script", "Node.js", "MongoDB", "AWS", "Linux", "Git"],
    achievements: [
      "Engineered intelligent chatbot systems utilizing advanced NLP techniques and custom scripting languages, implementing sophisticated conversation flow management and intent recognition",
      "Developed scalable backend architecture using Node.js and MongoDB, incorporating efficient data modeling and query optimization for high-performance chatbot operations",
      "Led multiple agile development teams in delivering client-focused solutions, implementing automated testing frameworks and maintaining comprehensive documentation"
    ]
  },
  "Machine Learning Intern": {
    skills: ["Python", "TensorFlow", "Data Analysis", "Edge Computing", "Electronics"],
    achievements: [
      "Developed and optimized EdgeML models for resource-constrained wearable devices, implementing efficient inference algorithms and memory management techniques",
      "Conducted comprehensive analysis of Parkinson's patient data using advanced statistical methods and machine learning algorithms in Python",
      "Enhanced gait detection accuracy by 5% through implementation of ensemble learning techniques, incorporating multiple model architectures and voting mechanisms"
    ]
  },
  "Embedded Systems Developer": {
    skills: ["Qt", "C++", "IoT", "MQTT", "Electronics", "TCP/IP"],
    achievements: [
      "Designed and implemented scalable IoT platform architecture incorporating MQTT protocol for efficient device communication and data management",
      "Developed sophisticated sensor calibration systems with automated drift correction and environmental compensation algorithms",
      "Created real-time monitoring interface using Qt/C++, implementing efficient data visualization and system control capabilities with responsive UI design"
    ]
  }
};
 const skillGroups = {
  'Languages & Core': ['C', 'C++', 'Python', 'Bash'],
  'AI & ML': ['PyTorch','TensorFlow', 'Graph Neural Networks', 'LLMs', 'OpenCV', 'Scikit-learn'],
  'Web & Cloud': ['HTML', 'Node.js', 'MySQL', 'MongoDB', 'GCP', 'AWS'],
  'Tools': ['CARLA', 'Jenkins', 'Docker', 'Linux', 'Git'],
  'Embedded Systems': ['MQTT', 'IoT', 'MODBUS','ROS', 'FreeRTOS', 'UOS', 'TCP/IP', 'Edge Computing', 'MCU', 'Signals', 'Modulation', 'Electronics', 'Communication Protocols']
};
const certifications = {
  'Machine Learning': [
    {
      title: 'Machine Learning Specialization',
      link: 'https://coursera.org/share/6aced8053fae106d038d6c391ccfc20f'
    }
  ],
  'Deep Learning': [
    {
      title: 'DeepLearning.AI TensorFlow Developer',
      link: 'https://coursera.org/share/916ab3e2d29d425d193212987d5b4bc1'
    },
    {
      title: 'Simple Recurrent Neural Network with Keras',
      link: 'https://coursera.org/share/a8e2f30226bafe239b948d2c7aac8194'
    },
    {
      title: 'Device-based Models with TensorFlow Lite',
      link: 'https://coursera.org/share/666237cc27cd13b447095a2292c53fd0'
    },
    

  ],
  'Embedded Systems': [
    {
      title: 'Development of Secure Embedded Systems',
      link: 'https://coursera.org/share/9eb36d8acf114012c971a12f81b7e3ef'
    },
    {
      title: 'Introduction to Self-Driving Cars',
      link: 'https://coursera.org/share/442ac5e7a30cf7bf6744fa7c107e2a6a'
    },
    {
      title: 'State Estimation and Localization for Self-Driving Cars',
      link: 'https://coursera.org/share/df908ef3df46a349f007dda8c9e642eb'
    },
    {
      title: 'Motion Planning for Self-Driving Cars',
      link: 'https://coursera.org/share/753e7ab694eda7e3c7975ffb31bd1684'
    }
  ],
  'Google Cloud': [
    {
      title: 'Custom Prediction Routine on Google AI Platform',
      link: 'https://coursera.org/share/748de728851ae518c74eb3b17e482e67'
    },
    {
      title: 'Google Cloud Platform Fundamentals: Core Infrastructure',
      link: 'https://coursera.org/share/a738eee5060230fb650382316856040b'
    }
  ]
};


const projects = [
  {
    title: "Improving 3D Object Detection for Lidars in CAVs",
    description: "Engineered a high-performance LiDAR-based object detection system for Connected Autonomous Vehicles (CAVs) utilizing Point Pillars architecture and deep learning frameworks. Implemented a custom multi-head attention mechanism to enhance feature extraction from point cloud data, achieving improved spatial awareness. Developed a specialized regressor for precise 3D bounding box estimation and a multi-class classifier for object categorization. Integrated RANSAC algorithm for point cloud segmentation and ground plane estimation, significantly reducing false positive detections. The system demonstrated robust performance across varying environmental conditions and object occlusion scenarios.",
    tech: "Point Pillars, RANSAC, Multihead Attention, Regressor, Classification",
    category: "Computer Vision",
    link: "https://github.com/xavierallem/lidar-detection",
    gif: "https://media.giphy.com/media/3o7qDEq2bMbcbPRQ2c/giphy.gif" // 3D visualization gif
  },
  {
    title: "SMOLEs - Posture Analysis",
    description: "Architected and implemented a comprehensive posture analysis and correction system specifically designed for Osteoarthritis patients, integrating embedded systems with AI-driven analysis. Developed efficient data codecs for real-time sensor data compression and processing, optimizing bandwidth usage while maintaining data integrity. Engineered a robust Bluetooth communication protocol with error handling and packet verification for reliable real-time monitoring. Implemented sophisticated signal processing algorithms for noise reduction and motion artifact elimination. The system features automated calibration routines and personalized threshold detection for individual patient profiles, enabling precise posture deviation detection with minimal false alerts.",
    tech: "Embedded C/C++, AI Models, Data Analysis, Data Codec, Bluetooth, Electronics",
    category: "Healthcare",
    link: "https://github.com/xavierallem/SMOLES-Firmware",
    gif: "https://media.giphy.com/media/xT9C25UNTwfZuk85WP/giphy.gif" // Healthcare/medical monitoring gif
  },
  {
    title: "picoVision (AI Vision Assistant)",
    description: "Developed an advanced AI-powered vision assistant system integrating embedded hardware with state-of-the-art machine learning models. Implemented a custom Vision Transformer architecture optimized for resource-constrained environments, achieving efficient real-time image processing. Engineered a sophisticated image codec for optimal data transmission and storage. Integrated an advanced text-to-speech system utilizing I2S protocol for high-quality audio output. Developed a secure IP tunneling solution enabling remote access and monitoring capabilities while maintaining data privacy. The system features dynamic power management and adaptive processing capabilities based on computational requirements.",
    tech: "Embedded C/C++, Vision Transformer, LLM, Flask, Image codec, I2S, Text-To-Speech, IP Tunneling, Electronics",
    category: "AI & Embedded Systems",
    link: "https://github.com/xavierallem/picoVision",
    gif: "https://media.giphy.com/media/LaVp0AyqR5bGsC5Cbm/giphy.gif" // AI/computer vision gif
  },
  {
    title: "Project LiXL",
    description: "Engineered sophisticated embedded system solutions leveraging STMCore and ARM architecture for high-performance control applications. Developed an advanced WLED control system implementing optimized DSA algorithms for precise illumination control and power efficiency. Designed custom PCB layouts and implemented robust interrupt handling mechanisms for real-time response. Created a modular firmware architecture supporting dynamic configuration and over-the-air updates. Implemented comprehensive diagnostic and debugging capabilities through UART/SPI interfaces.",
    tech: "Embedded C/C++, STMCore, Arm, WLED, Electronics, DSA",
    category: "Embedded Systems",
    link: "",
    gif: "https://media.giphy.com/media/xT0xeJpnrWC4XWblEk/giphy.gif" // LED/electronics gif
  },
  {
    title: "RITA Project",
    description: "Developed a comprehensive embedded Linux solution for advanced photogrammetry applications, implementing a custom image processing pipeline using PyTorch. Engineered efficient build systems using Make for cross-compilation and deployment optimization. Implemented sophisticated image processing algorithms for feature detection, matching, and 3D reconstruction. Developed containerized deployment solutions ensuring consistent performance across different hardware platforms. The system includes automated calibration routines for various camera parameters and environmental conditions, enabling precise 3D reconstruction from multiple image sources.",
    tech: "Embedded Linux, LinuxArmSDK, Data Analysis, Photogrammetry, Make, PyTorch, Docker, Image Processing",
    category: "Computer Vision",
    link: "",
    gif: "https://media.giphy.com/media/3oKIPnAiaMCws8nOsE/giphy.gif" // 3D reconstruction/photogrammetry gif
  },
  {
    title: "Simple Linear Regression in Arduino",
    description: "Engineered a lightweight yet robust linear regression library optimized for EdgeML applications on Arduino platforms. Implemented memory-efficient algorithms for real-time coefficient calculation and prediction. Developed adaptive learning rate mechanisms for improved convergence in resource-constrained environments. The library features automated data normalization, outlier detection, and configurable training parameters, making it suitable for various sensor-based prediction applications while maintaining minimal memory footprint.",
    tech: "Embedded Systems, Data Analysis, Arduino, EdgeML, Electronics",
    category: "AI & Embedded Systems",
    link: "https://github.com/xavierallem/arduino-linear-regression",
    gif: "https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif" // Data analysis/graphs gif
  },
  {
    title: "Esp8266 Edge ML",
    description: "Developed a comprehensive machine learning framework for ESP8266 platforms, focusing on efficient implementation of ML algorithms in resource-constrained environments. Engineered optimized memory management techniques for handling model parameters and intermediate computations. Implemented power-efficient processing algorithms with selective computation activation. Created a robust testing framework for validating ML model performance under various hardware constraints and environmental conditions. The system includes automated resource monitoring and adaptive processing capabilities based on available system resources.",
    tech: "Embedded Systems, Data Analysis, Arduino, EdgeML, Electronics, IOT, EspCore",
    category: "AI & Embedded Systems",
    link: "https://github.com/xavierallem/esp8266-Edge-ML",
    gif: "https://media.giphy.com/media/3oKIPEqDGUULpEU0aQ/giphy.gif" // IoT/wireless communication gif
  },
  {
    title: "Speech Recognition in Arduino",
    description: "Engineered an embedded speech recognition system optimized for Arduino platforms, implementing efficient Digital Fourier Transform (DFT) algorithms for real-time audio processing. Developed custom feature extraction techniques for identifying speech patterns in resource-constrained environments. Implemented sophisticated noise reduction and signal enhancement algorithms for improved recognition accuracy. The system features adaptive threshold detection for varying acoustic environments and includes power-efficient processing routines for extended battery operation. Integrated real-time frequency analysis and pattern matching algorithms optimized for the target hardware platform.",
    tech: "Embedded Systems, Data Analysis, Arduino, EdgeML, Electronics, IOT, DFT",
    category: "AI & Embedded Systems",
    link: "https://github.com/xavierallem/Speech-Recognition-ES",
    gif: "https://media.giphy.com/media/3oEduNITi4dGMp7SdG/giphy.gif" // Audio/sound waves gif
  },
];

const experiences = [
  {
    title: "Thesis",
    company: "FZI, Karlsruhe, Germany",
    date: "Nov 2024 - May 2025",
    description: "EffiComm: Bandwidth Efficient Multi Agent Communication"
  },
  {
    title: "Research Assistant",
    company: "FZI, Karlsruhe, Germany",
    date: "Mar 2024 - Present",
    description: "Developing Graph Neural Networks and Gaussian Process models for Pathogen Detection"
  },
  {
    title: "Software Developer(WerkStudent)",
    company: "Vanory, Karlsruhe, Germany",
    date: "Feb 2023 - Mar 2024",
    description: "Developing Firmware and Device drivers in Embedded C/C++ & Edge Computing using WLED and STMCore"
  },
  {
    title: "Software Developer(HiWI)",
    company: "RITA Project, Karlsruhe, Germany",
    date: "Jan 2023 - Jan 2024",
    description: "Developing Firmware and Device drivers in Embedded Linux for photogrammetry"
  },
  {
    title: "Associate Software Developer",
    company: "Gupshup, India, Mumbai",
    date: "Mar 2022 - Sep 2022",
    description: "Developing Ai Chat Bots in NodeJS , Gupshup’s custom scripting development platform in scrum and agile projects etc"
  },
  {
    title: "Machine Learning Intern",
    company: "Life Spark Technology, IIT Bombay, Mumbai",
    date: "Jan 2022 - Feb 2022",
    description: "Analysing Data for Parkinson’s affected patients, Creating and Deploying EdgeML Model for a wearable to reduce the Gaits."
  },
  {
    title: "Embedded Systems Developer",
    company: "Metwiz Materials Private Limited, Maharashtra",
    date: "Aug 2021 - Dec 2021",
    description: "Designing IOT Platform with QT, Programming and Calibrating Sensors"
  }
];

const ExperienceCard = ({ exp, index, isVisible }) => {
  const [isExpanded, setIsExpanded] = useState(false);
  
  return (
    <div 
      className="relative pl-20 transition-transform cursor-pointer"
      onClick={() => setIsExpanded(!isExpanded)}
    >
      <div 
        className={`absolute left-7 w-3 h-3 bg-blue-500 rounded-full transform transition-all duration-500 ${
          isVisible ? 'scale-100' : 'scale-0'
        }`}
        style={{ 
          top: '32px',
          
          transitionDelay: `${index * 200}ms`,
        }}
      />
      <div
        className={`bg-gray-800 p-6 rounded-lg transform transition-all duration-500 hover:bg-gray-700 ${
          isVisible ? 'translate-x-0 opacity-100' : 'translate-x-20 opacity-0'
        }`}
        style={{ transitionDelay: `${index * 200 + 100}ms` }}
      >
        <div className="flex justify-between items-start mb-4">
          <div>
            <div className="flex items-center gap-2">
              <h3 className="text-xl font-bold text-blue-400 transition-colors">{exp.title}</h3>
              {isExpanded ? 
                <ChevronUp className="w-5 h-5 text-gray-400" /> : 
                <ChevronDown className="w-5 h-5 text-gray-400" />
              }
            </div>
            <p className="text-blue-400">{exp.company}</p>
          </div>
          <span className="text-gray-400">{exp.date}</span>
        </div>
        <p className="text-gray-300">{exp.description}</p>
        
        <div className={`mt-4 space-y-3 overflow-hidden transition-all duration-300 ${
          isExpanded ? 'max-h-96 opacity-100' : 'max-h-0 opacity-0'
        }`}>
          <div className="border-t border-gray-700 pt-4">
            {experienceDetails[exp.title] && (
              <>
                <div className="mb-4">
                  <h4 className="font-semibold text-blue-400 mb-2">Skills & Technologies</h4>
                  <div className="flex flex-wrap gap-2">
                    {experienceDetails[exp.title].skills.map((skill) => (
                      <span 
                        key={skill} 
                        className="px-2 py-1 bg-gray-900 rounded text-sm text-gray-300 hover:bg-blue-500/20"
                      >
                        {skill}
                      </span>
                    ))}
                  </div>
                </div>
                <div>
                  <h4 className="font-semibold text-blue-400 mb-2">Key Achievements</h4>
                  <ul className="list-disc list-inside space-y-1">
                    {experienceDetails[exp.title].achievements.map((achievement) => (
                      <li key={achievement} className="text-sm text-gray-300">
                        <span dangerouslySetInnerHTML={{ __html: achievement }} />
                      </li>
                    ))}
                  </ul>
                </div>
              </>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};


 
const Portfolio = () => {
  const [activeSection, setActiveSection] = useState('home');
  const [isVisible, setIsVisible] = useState(false);
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);

  useEffect(() => {
    setIsVisible(true);
  }, []);

  // Function to close mobile menu after selecting a section
  const handleSectionClick = (section) => {
    setActiveSection(section);
    setMobileMenuOpen(false);
  };

  return (
    <div className="min-h-screen bg-gray-900 text-white">
      {/* Responsive Navigation */}
      <nav className="fixed top-0 w-full bg-gray-800/95 backdrop-blur-sm p-4 z-50">
        <div className="flex justify-between items-center max-w-6xl mx-auto">
          <h1 className={`text-xl sm:text-2xl font-bold transition-all duration-500 ${isVisible ? 'translate-x-0 opacity-100' : '-translate-x-20 opacity-0'}`}>
            Allen Xavier
          </h1>
          
          {/* Desktop Navigation */}
          <div className="hidden md:flex gap-4">
            {['home', 'experience', 'projects', 'publications'].map((section) => (
              <button
                key={section}
                onClick={() => setActiveSection(section)}
                className={`px-4 py-2 rounded transition-all duration-300 ${
                  activeSection === section ? 'bg-blue-600' : 'hover:bg-gray-700'
                }`}
              >
                {section.charAt(0).toUpperCase() + section.slice(1)}
              </button>
            ))}
          </div>
          
          {/* Mobile Menu Button */}
          <button 
            className="md:hidden text-white focus:outline-none"
            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
          >
            {mobileMenuOpen ? 
              <X className="w-6 h-6" /> : 
              <Menu className="w-6 h-6" />
            }
          </button>
        </div>
        
        {/* Mobile Navigation Overlay */}
        {mobileMenuOpen && (
          <div className="md:hidden absolute top-full left-0 w-full bg-gray-800 py-2 px-4 shadow-lg">
            {['home', 'experience', 'projects', 'publications'].map((section) => (
              <button
                key={section}
                onClick={() => handleSectionClick(section)}
                className={`block w-full text-left px-4 py-3 rounded transition-all duration-300 ${
                  activeSection === section ? 'bg-blue-600' : 'hover:bg-gray-700'
                }`}
              >
                {section.charAt(0).toUpperCase() + section.slice(1)}
              </button>
            ))}
          </div>
        )}
      </nav>

      <main className="pt-24 px-4 pb-12">
        <div className="max-w-6xl mx-auto">
          {activeSection === 'home' && (
            <div className={`space-y-8 transition-all duration-500 ${isVisible ? 'translate-y-0 opacity-100' : 'translate-y-20 opacity-0'}`}>
              <div className="flex flex-col sm:flex-row items-center gap-4">
                <img src={AllenImage} alt="Profile" className="rounded-full w-20 h-20 sm:w-24 sm:h-24" />
                <div className="text-center sm:text-left">
                  <h2 className="text-3xl sm:text-4xl font-bold mb-2">Allen Xavier Arasan</h2>
                  <p className="text-gray-400">MS Electrical and Information Technology @ KIT</p>
                </div>
              </div>
              
              <div className="prose prose-invert max-w-none">
                <p className="text-base sm:text-lg leading-relaxed">
                  Hey there! 👋 I'm that rare breed of developer who makes machines talk to each other while occasionally talking to humans too. Currently mastering the art of making robots play nice at KIT, Germany, when I'm not debugging my coffee machine's firmware.
                </p>
                
                <p className="text-base sm:text-lg leading-relaxed mt-4">
                  From crafting AI chatbots at Gupshup to helping Parkinson's patients with ML at Life Spark, I've worn many hats - though my favorite is my debugging hat (it has LED strips). Currently, I'm diving deep into Graph Neural Networks for autonomous vehicles at FZI, because apparently teaching cars to drive is easier than teaching humans to use turn signals.
                </p>

                <div className="mt-8">
                  <h3 className="text-xl sm:text-2xl font-bold mb-4">Skills & Technologies</h3>
                  <div className="grid grid-cols-1 gap-4">
                    {Object.entries(skillGroups).map(([category, skills]) => (
                      <div key={category} className="bg-gray-800/50 p-4 rounded-lg">
                        <h4 className="text-blue-400 font-semibold mb-2">{category}</h4>
                        <div className="flex flex-wrap gap-2">
                          {skills.map(skill => (
                            <TechLogo key={skill} name={skill} />
                          ))}
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
                                
                <div className="mt-8">
                  <h3 className="text-xl sm:text-2xl font-bold mb-4">Certifications</h3>
                  <div className="grid grid-cols-1 gap-4">
                    {Object.entries(certifications).map(([category, skills]) => (
                      <div key={category} className="bg-gray-800/50 p-4 rounded-lg">
                        <h4 className="text-blue-400 font-semibold mb-2">{category}</h4>
                        <div className="flex flex-wrap gap-2">
                          {skills.map(cert => (
                            cert.link ? (
                              <a
                                key={cert.title}
                                href={cert.link}
                                target="_blank"
                                rel="noopener noreferrer"
                                className="px-2 py-1 bg-gray-700 rounded-full text-xs sm:text-sm text-gray-300 hover:text-blue-400 hover:bg-blue-500/20 transition-colors cursor-pointer"
                              >
                                {cert.title}
                              </a>
                            ) : (
                              <span
                                key={cert.title}
                                className="px-2 py-1 bg-gray-700 rounded-full text-xs sm:text-sm text-gray-300 hover:bg-blue-500/20 transition-colors"
                              >
                                {cert.title}
                              </span>
                            )
                          ))}
                        </div>
                      </div>
                    ))}
                  </div>
                </div>

                <div className="flex flex-wrap justify-center sm:justify-start gap-4 mt-6">
                  <a href="https://github.com/xavierallem" className="flex items-center gap-2 px-4 py-2 bg-gray-800 rounded hover:bg-gray-700 transition-colors">
                    <GithubIcon className="w-5 h-5" />
                    GitHub
                  </a>
                  <a href="mailto:xavierallem1999@gmail.com" className="flex items-center gap-2 px-4 py-2 bg-gray-800 rounded hover:bg-gray-700 transition-colors">
                    <Mail className="w-5 h-5" />
                    Email
                  </a>
                </div>
              </div>
            </div>
          )}

          {activeSection === 'experience' && (
            <div className="relative">
              <div className="absolute left-3 sm:left-8 top-0 w-1 h-full bg-blue-500/20 rounded-full" />
              <div className="space-y-8 sm:space-y-12 relative">
                {experiences.map((exp, index) => (
                  <ExperienceCardResponsive
                    key={exp.title + exp.company}
                    exp={exp}
                    index={index}
                    isVisible={isVisible}
                  />
                ))}
              </div>
            </div>
          )}

          {activeSection === 'projects' && (
            <div className="grid grid-cols-1 gap-6">
              {projects.map((project, index) => (
                <div
                  key={project.title}
                  className={`bg-gray-800 p-4 sm:p-6 rounded-lg transform transition-all duration-500 hover:translate-y-px relative group overflow-hidden ${
                    isVisible ? 'translate-y-0 opacity-100' : 'translate-y-20 opacity-0'
                  }`}
                  style={{ transitionDelay: `${index * 100}ms` }}
                >
                  {/* GIF overlay that appears on hover */}
                  {project.gif && (
                    <div className="absolute inset-0 bg-black/80 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300 z-10">
                      <img 
                        src={project.gif} 
                        alt={`${project.title} demo`}
                        className="max-w-full max-h-full rounded-lg object-contain"
                        style={{ maxHeight: '400px', maxWidth: '600px' }}
                      />
                    </div>
                  )}
                  
                  <div className="flex justify-between items-start mb-4">
                    <div>
                      <h3 className="text-lg sm:text-xl font-bold text-blue-400 mb-2">{project.title}</h3>
                      <span className="inline-block px-2 py-1 rounded-full bg-blue-500/10 text-blue-400 text-xs sm:text-sm mb-4">
                        {project.category}
                      </span>
                    </div>
                    {project.link && (
                      <a href={project.link} target="_blank" rel="noopener noreferrer" 
                         className="text-gray-400 hover:text-blue-400 transition-colors z-20 relative">
                        <GithubIcon className="w-5 h-5 sm:w-6 sm:h-6" />
                      </a>
                    )}
                  </div>
                  <p className="text-sm sm:text-base text-gray-300 mb-4">{project.description}</p>
                  <div className="flex flex-wrap gap-2">
                    {project.tech.split(', ').map((tech) => (
                      <span key={tech} className="px-2 py-1 bg-gray-700 rounded-md text-xs sm:text-sm text-gray-300">
                        {tech}
                      </span>
                    ))}
                  </div>
                </div>
              ))}
            </div>
          )}

          {activeSection === 'publications' && (
            <div className={`space-y-6 transition-all duration-500 ${isVisible ? 'translate-y-0 opacity-100' : 'translate-y-20 opacity-0'}`}>
                <div className="bg-gray-800 p-4 sm:p-6 rounded-lg hover:bg-gray-700 transition-all">
                <BookOpen className="w-6 h-6 sm:w-8 sm:h-8 mb-3 sm:mb-4 text-blue-500" />
                <h3 className="text-lg sm:text-xl font-bold mb-2">EffiComm: Bandwidth Efficient Multi Agent Communication</h3>
                <p className="text-sm sm:text-base text-gray-400 mb-4">2025 IEEE International Conference on Intelligent Transportation Systems (ITSC 2025)</p>
                <a href="" 
                   className="text-blue-400 hover:text-blue-300 flex items-center gap-2">
                  View Paper
                  <Mail className="w-4 h-4" />
                </a>
              </div>
              <div className="bg-gray-800 p-4 sm:p-6 rounded-lg hover:bg-gray-700 transition-all">
                <BookOpen className="w-6 h-6 sm:w-8 sm:h-8 mb-3 sm:mb-4 text-blue-500" />
                <h3 className="text-lg sm:text-xl font-bold mb-2">Unknown Terrain modelling using 3D mapping</h3>
                <p className="text-sm sm:text-base text-gray-400 mb-4">5th International Conference on Computing Methodologies and Communication Computing Methodologies 2021</p>
                <a href="https://ieeexplore.ieee.org/abstract/document/9418346" 
                   className="text-blue-400 hover:text-blue-300 flex items-center gap-2">
                  View Paper
                  <Mail className="w-4 h-4" />
                </a>
              </div>
              <div className="bg-gray-800 p-4 sm:p-6 rounded-lg hover:bg-gray-700 transition-all">
                <BookOpen className="w-6 h-6 sm:w-8 sm:h-8 mb-3 sm:mb-4 text-blue-500" />
                <h3 className="text-lg sm:text-xl font-bold mb-2">Patient Monitoring & Assisting System</h3>
                <p className="text-sm sm:text-base text-gray-400 mb-4">IEEE International Conference on Computational Science and Technology 2022</p>
                <a href="https://ieeexplore.ieee.org/abstract/document/10040443"
                   className="text-blue-400 hover:text-blue-300 flex items-center gap-2">
                  View Paper
                  <Mail className="w-4 h-4" />
                </a>
              </div>
            </div>
          )}
        </div>
      </main>
    </div>
  );
};

// Responsive Experience Card Component
const ExperienceCardResponsive = ({ exp, index, isVisible }) => {
  const [isExpanded, setIsExpanded] = useState(false);
  
  return (
    <div 
      className="relative pl-8 sm:pl-20 transition-transform cursor-pointer"
      onClick={() => setIsExpanded(!isExpanded)}
    >
      <div 
        className={`absolute left-3 sm:left-7 w-3 h-3 bg-blue-500 rounded-full transform transition-all duration-500 ${
          isVisible ? 'scale-100' : 'scale-0'
        }`}
        style={{ 
          top: '50%',
          marginTop: '-6px',
          transitionDelay: `${index * 200}ms`,
        }}
      />
      <div
        className={`bg-gray-800 p-4 sm:p-6 rounded-lg transform transition-all duration-500 hover:bg-gray-700 ${
          isVisible ? 'translate-x-0 opacity-100' : 'translate-x-20 opacity-0'
        }`}
        style={{ transitionDelay: `${index * 200 + 100}ms` }}
      >
        <div className="flex flex-col sm:flex-row sm:justify-between sm:items-start mb-4 gap-2">
          <div>
            <div className="flex items-center gap-2">
              <h3 className="text-lg sm:text-xl font-bold text-blue-400 transition-colors">{exp.title}</h3>
              {isExpanded ? 
                <ChevronUp className="w-4 h-4 sm:w-5 sm:h-5 text-gray-400" /> : 
                <ChevronDown className="w-4 h-4 sm:w-5 sm:h-5 text-gray-400" />
              }
            </div>
            <p className="text-sm sm:text-base text-blue-400">{exp.company}</p>
          </div>
          <span className="text-xs sm:text-sm text-gray-400">{exp.date}</span>
        </div>
        <p className="text-sm sm:text-base text-gray-300">{exp.description}</p>
        
        <div className={`mt-4 space-y-3 overflow-hidden transition-all duration-300 ${
          isExpanded ? 'max-h-96 opacity-100' : 'max-h-0 opacity-0'
        }`}>
          <div className="border-t border-gray-700 pt-4">
            {experienceDetails[exp.title] && (
              <>
                <div className="mb-4">
                  <h4 className="font-semibold text-blue-400 mb-2 text-sm sm:text-base">Skills & Technologies</h4>
                  <div className="flex flex-wrap gap-2">
                    {experienceDetails[exp.title].skills.map((skill) => (
                      <span 
                        key={skill} 
                        className="px-2 py-1 bg-gray-900 rounded text-xs sm:text-sm text-gray-300 hover:bg-blue-500/20"
                      >
                        {skill}
                      </span>
                    ))}
                  </div>
                </div>
                <div>
                  <h4 className="font-semibold text-blue-400 mb-2 text-sm sm:text-base">Key Achievements</h4>
                  <ul className="list-disc list-inside space-y-1">
                    {experienceDetails[exp.title].achievements.map((achievement) => (
                      <li key={achievement} className="text-xs sm:text-sm text-gray-300">
                        <span dangerouslySetInnerHTML={{ __html: achievement }} />
                      </li>
                    ))}
                  </ul>
                </div>
              </>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Portfolio;